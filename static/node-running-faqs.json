[
{"question": "How do I run a node?","answer": "<p>\nSee instructions <a href=\"https://developer.arbitrum.io/node-running/how-tos/running-a-full-node\">here</a>! \n</p>\n\n<p>\n\n</p>\n\n","key": "how-do-i-run-a-node"},
{"question": "How  to verify the integrity of the Nitro database I currently have?","answer": "<p>\nWe use an accumulator hash for all messages, ensuring that a new message doesn't get added to the database without the preceding message being valid.\n</p>\n\n<p>\nTo verify that everything is functioning correctly, you can check if it is <a href=\"https://docs.arbitrum.io/node-running/faq#how-can-i-verify-that-my-node-is-fully-synced\">syncing</a> and confirm that the latest block is consistent with other Arbitrum nodes. For instance, you might compare it with information on <a href=\"https://arbiscan.io/\">Arbiscan</a> (please note that the search function on Arbiscan does not support searches by block hash).\n</p>\n\n","key": "how--to-verify-the-integrity-of-the-nitro-database-i-currently-have"},
{"question": "How can I check if the node is running properly and diagnose the issue if it is not?","answer": "<p>\nWe have trace-level logging RPC request implemented on our node. You could use it to log all requests and responses at the trace level. (The performance impact of this should be negligible compared to the network overhead of an RPC request in the first place, especially considering that the request/response will only be serialized for logging if that log level is enabled.)\n</p>\n\n<p>\n\n</p>\n\n","key": "how-can-i-check-if-the-node-is-running-properly-and-diagnose-the-issue-if-it-is-not"},
{"question": "Why do I need an L1 node to run an Arbitrum node?","answer": "<p>\nDuring the node syncing stage, Arbitrum nodes read transactions from batches that have already been posted and executed on Layer 1. They connect to the Sequencer feed to receive new incoming batched transactions that have not been posted to L1 yet.\n</p>\n\n<p>\nWhen fully synced, the Arbitrum node uses the State Transition Function (STF) to consume transactions from the Sequencer feed and update the state accordingly. It also waits for the L1 batch to post. If the finalized L1 batch differs from what the Sequencer published, the node will update its state based on the L1 batched transactions.\n</p>\n\n","key": "why-do-i-need-an-l1-node-to-run-an-arbitrum-node"},
{"question": "Can I run an Arbitrum node in p2p mode?","answer": "<p>\nArbitrum doesn't have a consensus mechanism, so \"p2p mode\" doesn't apply. For nodes to sync to the latest chain state, they connect to an L1 node to sync the chain's history that's been posted in calldata and connect to the Sequencer feed for the transactions that have yet to be posted in batches. In no case do nodes need to peer up and sync with each other.\n</p>\n\n","key": "can-i-run-an-arbitrum-node-in-p2p-mode"},
{"question": "How do I read messages from the Sequencer feed?","answer": "<p>\nRunning an Arbitrum relay locally as a <a href=\"https://docs.arbitrum.io/node-running/how-tos/running-a-feed-relay\">Feed Relay</a> lets you subscribe to the Sequencer feed for real-time data as the Sequencer accepts and orders transactions off-chain. Refer to <a href=\"https://docs.arbitrum.io/node-running/how-tos/read-sequencer-feed\">How to read the sequencer feed</a> for a detailed guide.\n</p>\n\n<p>\n\n</p>\n\n","key": "how-do-i-read-messages-from-the-sequencer-feed"},
{"question": "How do I run a node locally for development?","answer": "<p>\nSee instructions <a href=\"https://developer.arbitrum.io/node-running/how-tos/local-dev-node\">here</a>.\n</p>\n\n<p>\nWe recommend running Nitro nodes via Docker; to compile directly / run without Docker, you can follow the steps in <a href=\"https://docs.arbitrum.io/node-running/how-tos/build-nitro-locally\">How to build Nitro locally</a>.\n</p>\n\n<p>\n\n</p>\n\n<p>\n\n</p>\n\n<p>\n\n</p>\n\n","key": "how-do-i-run-a-node-locally-for-development"},
{"question": "Is there any way to retrieve pre-Nitro archive data from a Nitro node?","answer": "<p>\nThe pre-Nitro stack is also called the \"classic\" stack. Full Nitro nodes start with a database that contains the information from the \"classic\" era.\n</p>\n\n<p>\nHowever, a Nitro node can't query archive information contained in \"classic\" blocks right away. To do that, you also need to run a classic node (<a href=\"https://developer.arbitrum.io/node-running/how-tos/running-a-classic-node\">instructions here</a>) and set the parameter <code>—node.rpc.classic-redirect=your-classic-node-RPC</code>.\n</p>\n\n<p>\nPlease note that this information only applies to Arbitrum One nodes. Arbitrum Nova and Sepolia nodes started with a Nitro stack, so they don't have \"classic\" data.\n</p>\n\n","key": "is-there-any-way-to-retrieve-prenitro-archive-data-from-a-nitro-node"},
{"question": "How can I verify that my node is syncing at a desirable speed?","answer": "<p>\nSyncing speed can vary depending on multiple factors. You can find the minimum hardware requirements to run your node <a href=\"https://developer.arbitrum.io/node-running/how-tos/running-a-full-node#minimum-hardware-configuration\">on this page</a>. You should also verify your network and disk speeds and ensure that the L1 node is running correctly.\n</p>\n\n","key": "how-can-i-verify-that-my-node-is-syncing-at-a-desirable-speed"},
{"question": "How can I verify that my node is fully synced?","answer": "<p>\nYou can make an <code>eth_syncing</code> RPC call to your node. Once a Nitro node is fully synced, <code>eth_syncing</code> returns the value <code>false</code> (just like a normal Geth node).\n</p>\n\n<p>\nWhen a Nitro node is still syncing, <code>eth_syncing</code> returns a map of values to help understand why the node is not syncing. Nitro execution and bottlenecks differ from those of a normal Geth node, so the <code>eth_syncing</code> output is unique to Nitro.\n</p>\n\n<p>\nYou can find information to understand the output of <code>eth_syncing</code> in the <a href=\"https://docs.arbitrum.io/for-devs/concepts/differences-between-arbitrum-ethereum/rpc-methods#eth_syncing\">RPC methods</a> page.\n</p>\n\n<p>\n\n</p>\n\n","key": "how-can-i-verify-that-my-node-is-fully-synced"},
{"question": "Is there an alternative to Docker when running a node?","answer": "<p>\nWe recommend running Nitro nodes using Docker, following <a href=\"https://docs.arbitrum.io/run-arbitrum-node/run-full-node\">the guide</a> provided in our documentation. However, you can compile the code directly by following the steps described in <a href=\"https://developer.arbitrum.io/node-running/how-tos/build-nitro-locally\">this guide</a>. \n</p>\n\n<p>\n\n</p>\n\n","key": "is-there-an-alternative-to-docker-when-running-a-node"},
{"question": "What are the minimum hardware requirements to run a full node?","answer": "<p>\nThe minimum hardware requirements are available <a href=\"https://developer.arbitrum.io/node-running/how-tos/running-a-full-node#minimum-hardware-configuration\">in this section</a>.\n</p>\n\n<p>\n\n</p>\n\n","key": "what-are-the-minimum-hardware-requirements-to-run-a-full-node"},
{"question": "How can I migrate the date of one synced node to a new one?","answer": "<p>\nFrom a fully synced node, you can copy its database (the <code>.arbitrum</code> directory in a default setup) to the same database folder of the new node, and it will start from the same state.\n</p>\n\n<p>\nKeep in mind that this must be done after a clean shutdown, while the node is not running.\n</p>\n\n<p>\n\n</p>\n\n","key": "how-can-i-migrate-the-date-of-one-synced-node-to-a-new-one"},
{"question": "When querying Classic transactions from a Nitro node, I sometimes get incorrect data, like the zero address as the sender. Why is that?","answer": "<p>\nSome old Nitro genesis database snapshots didn't properly set the retry sender for Classic blocks and contained this error. If you need to access that information, you can either resync your Nitro node with one of the <a href=\"https://snapshot.arbitrum.foundation/index.html\">current snapshots</a> or <a href=\"https://docs.arbitrum.io/node-running/how-tos/running-a-classic-node\">run a Classic node</a> alongside your Nitro node and configure a redirection for requests to Classic blocks. Please note that this only happens on Arbitrum One.\n</p>\n\n<p>\n\n</p>\n\n","key": "when-querying-classic-transactions-from-a-nitro-node-i-sometimes-get-incorrect-data-like-the-zero-address-as-the-sender-why-is-that"}
]