{
  "address-alias": {
    "title": "Address Alias",
    "text": "An address deterministically generated from an L1 contract address used on L2 to safely identify the source of an L1 to L2 message."
  },
  "arb-token-bridge": {
    "title": "Arb Token Bridge",
    "text": "A series of contracts on an Arbitrum chain and its underlying chain that facilitate trustless movement of ERC-20 tokens between the two layers."
  },
  "arbified-token-list": {
    "title": "Arbified Token List",
    "text": "A token list that conforms to [Uniswap's token list specification](https://github.com/Uniswap/token-lists); Arbified lists are generated by inputting externally maintained list ([i.e., coinmarketcap's list](https://api.coinmarketcap.com/data-api/v3/uniswap/all.json)) and outputting a list that includes all of the instances of token contracts on the Arbitrum chain bridged via the canonical [Arb Token Bridge](/intro/glossary#arb-token-bridge) from tokens on the inputted list. (See code [here](https://github.com/OffchainLabs/arbitrum-token-lists).)"
  },
  "arbitrum": {
    "title": "Arbitrum",
    "text": ""
  },
  "arbitrum-bridge-ui": {
    "title": "Arbitrum Bridge UI",
    "text": "Web application built and maintained by [Offchain Labs](/intro/glossary#offchain-labs) for user-interactions with the [Arb Token Bridge](/intro/glossary#arb-token-bridge); visit it [here](https://bridge.arbitrum.io/)."
  },
  "arbitrum-classic": {
    "title": "Arbitrum Classic",
    "text": ""
  },
  "arbitrum-full-node": {
    "title": "Arbitrum Full Node",
    "text": "A party who keeps track of the state of an Arbitrum chain and receives remote procedure calls (RPCs) from clients. Analogous to a non-staking L1 Ethereum node."
  },
  "arbitrum-orbit": {
    "title": "Arbitrum Orbit",
    "text": "[Layer 3 (L3)](/intro/glossary#layer-3-l3)"
  },
  "arbos": {
    "title": "ArbOS",
    "text": "Arbitrum's \"operating system\" that trustlessly handles system-level operations; includes the ability to emulate the EVM."
  },
  "assertion": {
    "title": "Assertion",
    "text": "A staked claim made by an Arbitrum [Validator](/intro/glossary#validator) representing a claim about an Arbitrum chain's state. An [Assertion](/intro/glossary#assertion) may, e.g., propose a new assertion, or may be a step in a [Challenge](/intro/glossary#challenge)."
  },
  "auction-contract": {
    "title": "Auction Contract",
    "text": "A smart contract that handles the state, accounting of funds for bids, and various operations of the [Timeboost](/intro/glossary#timeboost) auction. The contract is deployed on the target chain for which Timeboost is enabled."
  },
  "autonomous-auctioneer": {
    "title": "Autonomous Auctioneer",
    "text": "Off chain software that receives bids from [Timeboost](/intro/glossary#timeboost)  participants, processes and validates bids, and then posts the top valid bid (or top two valid bids in the case of a tie) to the [Auction Contract](/intro/glossary#auction-contract)  to resolve the on-going Timeboost auction. The autonomous auctioneer, for a given chain, is provisioned & deployed by an entity designated by the chain's owner."
  },
  "batch": {
    "title": "Batch",
    "text": "[Underlying Chain](/intro/glossary#underlying-chain),[Fast Inbox](/intro/glossary#fast-inbox)"
  },
  "blockchain": {
    "title": "Blockchain",
    "text": "A distributed digital ledger that is used to record transactions and store data in a secure, transparent, and tamper-resistant way, notably in cryptocurrency protocols."
  },
  "bls-signature": {
    "title": "BLS Signature",
    "text": ""
  },
  "bold": {
    "title": "BoLD",
    "text": "Short for \"Bounded Liquidity Delay\"; latest version of the Arbitrum [Challenge protocol](/intro/glossary#challenge-protocol) designed to eliminate [delay attack vectors](https://medium.com/offchainlabs/solutions-to-delay-attacks-on-rollups-434f9d05a07a) (see [here](https://medium.com/offchainlabs/bold-permissionless-validation-for-arbitrum-chains-9934eb5328cc) for more). Not currently on mainnet."
  },
  "bridge": {
    "title": "Bridge",
    "text": "[Cross-chain message](/intro/glossary#crosschain-message)"
  },
  "chain-owner": {
    "title": "Chain Owner",
    "text": "An entity (i.e., a smart contract) with affordance to carry out critical upgrades to an Arbitrum chain's core protocol; this includes upgrading protocol contracts, setting core system parameters, and adding and removing other chain owners."
  },
  "chain-state": {
    "title": "Chain state",
    "text": ""
  },
  "challenge": {
    "title": "Challenge",
    "text": "When two [Staker](/intro/glossary#staker)s disagree about the correct verdict on an [Assertion](/intro/glossary#assertion), those stakers can be put in a challenge. The challenge is refereed by the contracts on the underlying chain. Eventually one staker wins the challenge. The protocol guarantees that an honest  party will always win a challenge; the loser forfeits their stake."
  },
  "challenge-period": {
    "title": "Challenge Period",
    "text": "Window of time (one week on Arbitrum One) over which an [Assertion](/intro/glossary#assertion) can be challenged, and after which the assertion can be confirmed."
  },
  "challenge-protocol": {
    "title": "Challenge protocol",
    "text": "[Assertion](/intro/glossary#assertion)"
  },
  "client": {
    "title": "Client",
    "text": ""
  },
  "confirmation": {
    "title": "Confirmation",
    "text": "[Assertion](/intro/glossary#assertion),[L2 to L1 Message](/intro/glossary#l2-to-l1-message)"
  },
  "crosschain-message": {
    "title": "Cross-chain message",
    "text": "An action taken on some chain A which asynchronously initiates an additional action on chain B."
  },
  "custom-arbtoken": {
    "title": "Custom Arb-Token",
    "text": "Any L2 token contract registered to the [Arb Token Bridge](/intro/glossary#arb-token-bridge) that isn't a standard arb-token (i.e., a token that uses any gateway other than the [StandardERC20 gateway](/intro/glossary#standarderc20-gateway) )."
  },
  "custom-gateway": {
    "title": "Custom gateway",
    "text": "Any [Token Gateway](/intro/glossary#token-gateway) that isn't the [StandardERC20 gateway](/intro/glossary#standarderc20-gateway)."
  },
  "dapp": {
    "title": "dApp",
    "text": "Short for \"decentralized application.\" A dApp typically consists of smart contracts as well as a user-interface for interacting with them."
  },
  "data-availability-certificate": {
    "title": "Data Availability Certificate",
    "text": ""
  },
  "defensive-validator": {
    "title": "Defensive Validator",
    "text": "A [Validator](/intro/glossary#validator) that watches an Arbitrum chain and takes action (i.e., stakes and challenges) only when and if an invalid [Assertion](/intro/glossary#assertion) occurs."
  },
  "delayed-inbox": {
    "title": "Delayed Inbox",
    "text": "[Fast Inbox](/intro/glossary#fast-inbox)"
  },
  "devtools-dashboard": {
    "title": "Dev-Tools Dashboard",
    "text": "Web application built and maintained by [Offchain Labs](/intro/glossary#offchain-labs) for developers and users to debug Arbitrum transactions; i.e., executing or checking the status of [Cross-chain message](/intro/glossary#crosschain-message)s; visit it [here](https://retryable-dashboard.arbitrum.io/)."
  },
  "dissection": {
    "title": "Dissection",
    "text": "A step in the [Challenge protocol](/intro/glossary#challenge-protocol)  in which two challenging parties interactively narrow down their disagreement until they reach a [One Step Proof](/intro/glossary#one-step-proof)."
  },
  "ethereum-wallet": {
    "title": "Ethereum Wallet",
    "text": "A software application used for transacting with the Ethereum [Blockchain](/intro/glossary#blockchain)."
  },
  "evm": {
    "title": "EVM+",
    "text": "The paradigm introduced by [Stylus](/intro/glossary#stylus) in which Arbitrum's EVM compatibility is preserved while new features and improvements are introduced."
  },
  "express-lane": {
    "title": "Express Lane",
    "text": "[Timeboost](/intro/glossary#timeboost)"
  },
  "express-lane-controller": {
    "title": "Express Lane Controller",
    "text": "An address, defined in the [Auction Contract](/intro/glossary#auction-contract), that is granted the privilege to use the [Express Lane](/intro/glossary#express-lane). These privileges are granted after verifying that the incoming transactions were properly signed by the express lane controller, among other checks."
  },
  "fair-ordering-algorithm": {
    "title": "Fair Ordering Algorithm",
    "text": ""
  },
  "fast-exit--liquidity-exit": {
    "title": "Fast Exit / Liquidity Exit",
    "text": "A means by which a user can bypass an Arbitrum chain's [Challenge Period](/intro/glossary#challenge-period) when withdrawing fungible assets (or more generally, executing some \"fungible\" L2 to L1 operation); for trustless fast exits, a liquidity provider facilitates an atomic swap of the asset on L2 directly to L1."
  },
  "fast-inbox": {
    "title": "Fast Inbox",
    "text": "[Delayed Inbox](/intro/glossary#delayed-inbox)"
  },
  "first-come-first-serve-fcfs": {
    "title": "First Come First Serve (FCFS)",
    "text": "A type of [Transaction Ordering Policy](/intro/glossary#transaction-ordering-policy) used by the sequencer in Arbitrum chains whereby incoming transactions are sequenced into a block in the order that the transactions arrived."
  },
  "forceinclusion": {
    "title": "Force-Inclusion",
    "text": "[Delayed Inbox](/intro/glossary#delayed-inbox)"
  },
  "fraud-proof": {
    "title": "Fraud proof",
    "text": ""
  },
  "gas-price-floor": {
    "title": "Gas Price Floor",
    "text": ""
  },
  "gateway-router": {
    "title": "Gateway Router",
    "text": "Contracts in the [Arb Token Bridge](/intro/glossary#arb-token-bridge)  responsible for mapping tokens to their appropriate [Token Gateway](/intro/glossary#token-gateway)."
  },
  "genericcustom-gateway": {
    "title": "Generic-Custom Gateway",
    "text": "A particular [Custom gateway](/intro/glossary#custom-gateway) via which an L1 token contract can be registered to a token contract deployed to L2. A useful alternative to the [StandardERC20 gateway](/intro/glossary#standarderc20-gateway) for projects that wish to control the address of their L2 token contract, maintain L2 token contract upgradability, and for various other use-cases."
  },
  "ink": {
    "title": "Ink",
    "text": "The equivalent of gas in the [Stylus](/intro/glossary#stylus) vm. Ink is introduced for finer granularity than gas offers since Stylus's operations are considerably cheaper than their EVM analogs."
  },
  "l2-block": {
    "title": "L2 Block",
    "text": "Data structure that represents a group of L2 transactions (analogous to L1 blocks)."
  },
  "l2-to-l1-message": {
    "title": "L2 to L1 Message",
    "text": "[Challenge Period](/intro/glossary#challenge-period)"
  },
  "layer-3-l3": {
    "title": "Layer 3 (L3)",
    "text": ""
  },
  "native-fee-token": {
    "title": "Native Fee Token",
    "text": "[Arbitrum Orbit](/intro/glossary#arbitrum-orbit)"
  },
  "offchain-labs": {
    "title": "Offchain Labs",
    "text": ""
  },
  "one-step-proof": {
    "title": "One Step Proof",
    "text": "Final step in a challenge; a single operation of the Arbitrum VM ([WASM](/intro/glossary#wasm) ) is executed on the underlying chain, and the validity of its state transition is verified."
  },
  "outbox": {
    "title": "Outbox",
    "text": "An L1 contract responsible for tracking [L2 to L1 Message](/intro/glossary#l2-to-l1-message)s, including withdrawals, which can be executed once they are confirmed. The outbox stores a Merkle Root of all outgoing messages."
  },
  "portal": {
    "title": "Portal",
    "text": "A web application maintained by [Offchain Labs](/intro/glossary#offchain-labs) showcasing the Arbitrum ecosystem; visit it [here](https://portal.arbitrum.io/)."
  },
  "rblock": {
    "title": "RBlock",
    "text": "Refer to [Assertion](/intro/glossary#assertion)"
  },
  "reorg": {
    "title": "Reorg",
    "text": "A situation in which transactions on a chain that were at some point considered accepted then get rejected. In the context of an Arbitrum chain, once transactions are posted in the chain's [Fast Inbox](/intro/glossary#fast-inbox), the only way the chain can experience a reorg is if its [Underlying Chain](/intro/glossary#underlying-chain) itself reorgs. Of note, [Fraud proof](/intro/glossary#fraud-proof)s do not cause reorgs."
  },
  "retryable-autoredeem": {
    "title": "Retryable Autoredeem",
    "text": "The \"automatic\" (i.e., requiring no additional user action) execution of a [Retryable Ticket](/intro/glossary#retryable-ticket)  on an Arbitrum chain."
  },
  "retryable-redeem": {
    "title": "Retryable Redeem",
    "text": "The execution of a [Retryable Ticket](/intro/glossary#retryable-ticket) on L2; can be automatic (see [Retryable Autoredeem](/intro/glossary#retryable-autoredeem)) or manual via a user-initiated L2 transaction."
  },
  "retryable-ticket": {
    "title": "Retryable Ticket",
    "text": "An L1 to L2 cross chain message initiated by an L1 transaction sent to an Arbitrum chain for execution (e.g., a token deposit)."
  },
  "reverse-token-gateway": {
    "title": "Reverse Token Gateway",
    "text": "[Token Gateway](/intro/glossary#token-gateway)"
  },
  "sequencer-feed": {
    "title": "Sequencer Feed",
    "text": "[Soft Confirmation](/intro/glossary#soft-confirmation),[Batch](/intro/glossary#batch)"
  },
  "shared-sequencing": {
    "title": "Shared Sequencing",
    "text": ""
  },
  "smart-contract": {
    "title": "Smart Contract",
    "text": "A computer program whose operations are defined and executed within a blockchain consensus protocol."
  },
  "soft-confirmation": {
    "title": "Soft Confirmation",
    "text": ""
  },
  "speed-limit": {
    "title": "Speed Limit",
    "text": ""
  },
  "staker": {
    "title": "Staker",
    "text": "[Validator](/intro/glossary#validator),[Assertion](/intro/glossary#assertion)"
  },
  "standard-arbtoken": {
    "title": "Standard Arb-Token",
    "text": "An token contract on an Arbitrum chain deployed via the [StandardERC20 gateway](/intro/glossary#standarderc20-gateway); offers basic ERC20 functionality in addition to deposit / withdrawal affordances."
  },
  "standarderc20-gateway": {
    "title": "StandardERC20 gateway",
    "text": "[Token Gateway](/intro/glossary#token-gateway),[Standard Arb-Token](/intro/glossary#standard-arbtoken)"
  },
  "state-transition-function": {
    "title": "State Transition Function",
    "text": "The STF (State Transition Function) defines how new blocks are produced from input messages (i.e. transactions) in an Arbitrum chain."
  },
  "stylus": {
    "title": "Stylus",
    "text": ""
  },
  "timeboost": {
    "title": "Timeboost",
    "text": ""
  },
  "token-gateway": {
    "title": "Token Gateway",
    "text": "[StandardERC20 gateway](/intro/glossary#standarderc20-gateway),[Generic-Custom Gateway](/intro/glossary#genericcustom-gateway),[WETH Gateway](/intro/glossary#weth-gateway)"
  },
  "transaction": {
    "title": "Transaction",
    "text": "A user-initiated interaction with a Blockchain. Transactions are typically signed by users via wallets and are paid for via transaction fees."
  },
  "transaction-ordering-policy": {
    "title": "Transaction Ordering Policy",
    "text": "The rules and logic employed by a chain to order incoming transactions into a block."
  },
  "underlying-chain": {
    "title": "Underlying Chain",
    "text": ""
  },
  "validator": {
    "title": "Validator",
    "text": "[Arbitrum Full Node](/intro/glossary#arbitrum-full-node),[Assertion](/intro/glossary#assertion),[Watchtower Validator](/intro/glossary#watchtower-validator),[Defensive Validator](/intro/glossary#defensive-validator)"
  },
  "wasm": {
    "title": "WASM",
    "text": "[Fraud proof](/intro/glossary#fraud-proof),[Stylus](/intro/glossary#stylus)"
  },
  "wasmer": {
    "title": "WASMer",
    "text": "A popular WebAssembly runtime for executing [WASM](/intro/glossary#wasm) binaries. [A fork of WASMer](https://github.com/OffchainLabs/wasmer) is used for executing [Stylus](/intro/glossary#stylus) programs. WASMer executes considerably faster than Geth executes EVM code, contributing to Stylus's lower fees."
  },
  "watchtower-validator": {
    "title": "Watchtower Validator",
    "text": "A [Validator](/intro/glossary#validator)  that never stakes / never takes on chain action, who raises the alarm (by whatever off-chain means it chooses) if it witnesses an invalid assertion."
  },
  "weth-gateway": {
    "title": "WETH Gateway",
    "text": "[Token Gateway](/intro/glossary#token-gateway) for handing the bridging of wrapped Ether (WETH). WETH is unwrapped on L1 and rewrapped on L1 upon depositing (and vice-versa upon withdrawing), ensuring WETH on L2 always remains collateralized."
  }
}